# Import method from module
from random import randint
import time


def difficulty(choice):
    """
    Function -- Define difficulty level
    :param choice: Get the player choice, and generate randint based on
    :return: Generated randint (real_price)
    """
    if choice == "easy":
        print("So, what's the price ? 1 to 50... Good luck")
        return randint(1, 50)
    elif choice == "normal":
        print("So, what's the price ? 1 to 100... Good luck")
        return randint(1, 100)
    elif choice == "hard":
        print("So, what's the price ? 1 to 1000... Good luck")
        return randint(1, 1000)
    else:
        # My first personnal recursive !!
        return difficulty(input(str("Choose difficulty level : easy / normal / hard : ")))


def countdown(num_of_secs):
    while num_of_secs:
        m, s = divmod(num_of_secs, 60)
        min_sec_format = '{:02d}:{:02d}'.format(m, s)
        print(min_sec_format)
        time.sleep(1)
        num_of_secs -= 1

    return False


def is_price(real_price, price):
    """
    Function -- Check for correct answer or not
    :param real_price: Get the price generated by difficulty()
    :param price: Get the player input
    :return: True for the win / False for the wrong
    """
    if price > real_price:
        print("Fail, number is under. Try again")
        return False
    elif price < real_price:
        print("Fail, number is upper. Try again")
        return False
    else:
        print("Successful !!")
        return True


def win_or_loose(player1, player2):
    """
    Function -- Searching winner / looser
    :param player1: Get player 1
    :param player2: Get player 2
    :return: Results
    """
    if player1['Wins'] > player2['Wins']:
        print(player1['Name'], ", you won !!")
    elif player2['Wins'] > player1['Wins']:
        print(player2['Name'], ", you won !!")
    else:
        print("Match nul.")


def input_integer(text):
    """
    Function -- Check if entry is correct
    :param text: Get a text to display
    :return: Correct entry
    """
    while True:
        try:
            return int(input(text))
        except ValueError:
            print("Please enter a number")


def player_turn(player, real_price):
    """
    Function -- Players playing turn
    :param player: Get a player
    :param real_price: Get the real price to check
    :return: Player Dict (Win, Loose or Tries)
    """
    if player['Tries'] > 0:
        price = input_integer("What's the real price ? ")
        your_price = int(price)

        if not is_price(real_price, your_price):
            player['Tries'] -= 1

        if player["Tries"] == 0:
            print("Game over", player['Name'])
            player['Losts'] += 1

        if is_price(real_price, your_price):
            player['Wins'] += 1

    return player


def correctpricedual():
    """
    Game running (main)
    :return:
    """
    # Players entries :
    name_player1 = input(str("Player 1, enter a nickname : "))
    name_player2 = input(str("Player 2, enter a nickname : "))

    # Stats
    player1 = {'Name': name_player1, 'Tries': 4, 'Wins': 0, 'Losts': 0, 'Time': 0}
    player2 = {'Name': name_player2, 'Tries': 4, 'Wins': 0, 'Losts': 0, 'Time': 0}

    # Rounds & difficulty choice
    turn = 1
    choice = input(str("Choose difficulty level : easy / normal / hard : "))

    # Starting game.py
    print("Welcome to the $$ Right Price $$.")

    while turn < 6:
        # Generate random based on difficulty selected
        real_price = difficulty(choice)

        # Refill players tries & add wins
        player1['Tries'] = 4
        player2['Tries'] = 4
        current_score_player_1 = player1['Wins']
        current_score_player_2 = player2['Wins']

        # Starting round
        print("Round number ", turn)

        while player2['Tries'] > 0:
            # Player 1 playing
            print(player1['Name'], ": ")
            player1 = player_turn(player1, real_price)
            if player1['Wins'] > current_score_player_1:
                break

            # Player 2 playing
            print(player2['Name'], ": ")
            player2 = player_turn(player2, real_price)
            if player2['Wins'] > current_score_player_2:
                break

        # Add turn & display scores
        turn += 1
        print("Scores :", player1['Name'], player1['Wins'], "/", player2['Wins'], player2['Name'])

    # Checking winner
    win_or_loose(player1, player2)
